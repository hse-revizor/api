openapi: 3.0.0
info:
  version: 1.0.0
  title: Revizor Rules Service API
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
components:
  schemas:
    CheckingCombination:
      type: object
      required:
        - projects_ids
        - rules_ids
      properties:
        name:
          type: string
          nullable: true
        projects_ids:
          type: array
          items:
            type: string
        rules_ids:
          type: array
          items:
            type: string
    ReportCreationDto:
      type: object
      properties:
        reportId:
          type: string
          description: uuid
    ReportData:
      type: object
      properties:
        reportData:
          type: array
          items:
            type: object
            properties:
              project_id:
                type: string
              rules_matching:
                type: array
                items:
                  type: object
                  properties:
                    ruleId:
                      type: string
                    isApplied:
                      type: boolean
paths:
  /report:
    put:
      summary: Create a report
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - checkingCombination
              properties:
                checkingCombination:
                  $ref: '#/components/schemas/CheckingCombination'
      responses:
        '201':
          description: created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportCreationDto'
        '400':
          description: bad request
        '500':
          description: internal error
  /report/{reportId}:
    patch:
      summary: Update a report
      parameters:
        - name: reportId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportData'
      responses:
        '200':
          description: updated successfully
        '400':
          description: bad request
        '500':
          description: internal error
    get:
      summary: Get a report with its results
      parameters:
        - name: reportId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportData'
        '404':
          description: report not found
        '500':
          description: internal error
    delete:
      summary: Delete a report
      parameters:
        - name: reportId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: deleted successfully
        '500':
          description: internal error
